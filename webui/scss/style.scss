@import 'fontawesome.scss';
@import 'solid.scss';

// document classes
:root {
    font-family: monospace;
    user-select: none;

    --color-blue: #4fc1e9;
    --color-red: #fc6e51;
    --color-green: #add468;
    --color-yellow: #ffce54;
    --color-grey: #808080;
    --color-black: #404040;
    --color-white: #ffffff;

    --shadow-color: #808080bf;
    --shadow-outset: 3px 3px 2px 1px var(--shadow-color);
    --shadow-outset-active: 1px 1px 2px 1px var(--shadow-color);
    --shadow-inset: inset 2px 2px 2px 1px var(--shadow-color);
    --shadow-inset-active: inset 4px 4px 2px 1px var(--shadow-color);

    --key-entry-size: 100px;
    --key-entries-gap: calc(var(--key-entry-size) / 10);

    --key-control-button-size: 20px;
    --key-control-padding: 2px;
    --key-control-border-radius: 10px;

    --dialog-button-size: 40px;
    --dialog-gap: calc(var(--dialog-button-size) / 10);

    --macro-entry-height: 30px;
}

body {
    margin: var(--key-entries-gap);
    background-color: var(--color-white);
    color: var(--color-black);
}

// global classes
.hidden {
    display: none !important;
}

.invisible {
    visibility: hidden !important;
}

.button {
    cursor: pointer;
}

// project classes

.github-corner:active,
.github-corner:visited,
.github-corner svg {
    fill: var(--color-black);
    color: var(--color-white);
}

// Main container
.main-container {
    display: flex;
    flex-direction: column;
    align-items: center;

    .key-entries {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: var(--key-entries-gap);
        margin-bottom: calc(var(--key-entries-gap) / 2);
        padding: calc(var(--key-entries-gap) / 2);
        overflow: hidden;

        .key-container {
            display: grid;
            grid-template-rows: max-content 1fr max-content;
            width: var(--key-entry-size);
            height: var(--key-entry-size);
            border: 1px solid var(--shadow-color);
            border-radius: var(--key-control-border-radius);
            box-sizing: border-box;
            overflow: hidden;

            &.blank {
                background-color: transparent !important;
            }

            &.clickable {
                cursor: pointer;
            }

            &.clickable:hover {
                box-shadow: var(--shadow-outset);
            }

            &.clickable:active {
                box-shadow: var(--shadow-outset-active);
            }

            .key-type-icon {
                grid-row: 1;
                cursor: help;
                background-color: var(--color-white);
                border-right: 1px solid var(--shadow-color);
                border-bottom: 1px solid var(--shadow-color);
                border-bottom-right-radius: var(--key-control-border-radius);
                padding: 0 var(--key-control-padding) 0 0;
            }

            .key-handle {
                justify-self: end;
                grid-row: 1;
                cursor: grab;
                background-color: var(--color-white);
                border-left: 1px solid var(--shadow-color);
                border-bottom: 1px solid var(--shadow-color);
                border-bottom-left-radius: var(--key-control-border-radius);
                padding: 0 0 0 var(--key-control-padding);
            }

            &.blank .key-label {
                display: none;
            }

            .key-label {
                grid-row: 2;
                grid-column: 1/3;
                justify-self: center;
                align-self: center;
                font-weight: bold;
                word-break: break-all;
                background-color: var(--color-white);
                border: 1px solid var(--shadow-color);
                border-radius: var(--key-control-border-radius);
                padding: var(--key-control-padding) calc(var(--key-control-padding) * 3);
            }

            .key-controls {
                display: flex;
                grid-row: 3;
                grid-column: 1/3;
                justify-self: end;
                background-color: var(--color-white);
                border-left: 1px solid var(--shadow-color);
                border-top: 1px solid var(--shadow-color);
                border-top-left-radius: var(--key-control-border-radius);
                padding: var(--key-control-padding) 0 0 var(--key-control-padding);

                .button {
                    &.edit:hover {
                        color: var(--color-blue);
                    }
                    &.open:hover {
                        color: var(--color-green);
                    }
                    &.delete:hover {
                        color: var(--color-red);
                    }
                }
            }

            .key-type-icon,
            .button {
                width: var(--key-control-button-size);
                height: var(--key-control-button-size);
                display: flex;
                justify-content: center;
                align-items: center;
            }

            &.blank .button.delete {
                display: none;
            }

            &.blank .button.open,
            &.group .button.open,
            &.macro .button.open {
                display: none;
            }
        }
    }
}

// Big buttons
.main-container .app-controls,
.main-container .device-controls,
.main-container .key-entries-controls,
.dialog-container .dialog-reboot-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--key-entries-gap);
    margin-bottom: var(--key-entries-gap);

    .button {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        width: var(--key-entry-size);
        height: calc(var(--key-entry-size) / 2);
        box-sizing: border-box;
        align-self: flex-end;
        user-select: none;
        word-break: break-word;
        position: relative;
        background-color: var(--color-blue);
        border: 1px solid var(--color-grey);

        * {
            pointer-events: none;
        }
    }
}

.main-container .key-entries-controls .button {
    width: calc(var(--key-entry-size) * 3 + var(--key-entries-gap) * 2);
}

// Dialog
.dialog-container {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.5);

    .dialog {
        display: grid;
        grid-auto-columns: auto var(--dialog-button-size);
        column-gap: var(--dialog-gap);
        position: absolute;
        width: fit-content;
        min-width: 320px;
        background-color: var(--color-white);
        border: 1px solid var(--shadow-color);
        border-radius: var(--dialog-gap);
        box-sizing: border-box;
        box-shadow: var(--shadow-outset);
        overflow: auto;

        .dialog-header {
            grid-row: 1;
            grid-column: 1 / 3;
            display: flex;
            gap: var(--dialog-gap);
            margin-right: var(--dialog-button-size);
            padding-right: var(--dialog-gap);
            height: var(--dialog-button-size);
            background-color: var(--color-black);
            color: var(--color-white);

            .dialog-header-label {
                display: flex;
                align-items: center;
                justify-content: center;
                width: 100%;
                font-weight: bold;
                font-size: large;
                cursor: move;
            }

            .dialog-button {
                border-top: none;
                color: var(--color-black);

                .dialog-button-label {
                    position: absolute;
                    transform: rotate(-45deg);
                    opacity: 0;
                }
            }
        }

        .dialog-content {
            grid-row: 2;
            grid-column: 1 / 3;
            margin-left: var(--dialog-gap);
            margin-top: var(--dialog-gap);

            .dialog-prompt {
                margin-right: calc(var(--dialog-button-size) + var(--dialog-gap));
                max-width: 300px;
            }

            .dialog-inputs {
                grid-row: 2;
                grid-column: 1 / 3;
                display: grid;
                align-items: start;
                row-gap: var(--dialog-gap);

                .dialog-input {
                    display: grid;
                    gap: var(--dialog-gap);
                }

                .dialog-input-shorten {
                    margin-right: calc(var(--dialog-button-size) + var(--dialog-gap));
                }

                .input-color div {
                    display: flex;

                    input {
                        width: 100%;
                    }
                }

                summary {
                    cursor: pointer;
                }

                .input-macros {
                    display: grid;
                    grid-template-columns: 1fr var(--dialog-button-size);
                    gap: var(--dialog-gap);

                    .input-sortable {
                        display: grid;
                        gap: var(--dialog-gap);
                        border: 1px solid var(--color-grey);
                        box-sizing: border-box;
                        padding: var(--dialog-gap);
                        max-height: calc(var(--macro-entry-height) * 5 + var(--dialog-gap) * 6);
                        overflow: auto;

                        .macro-entry-container {
                            display: flex;
                            gap: var(--dialog-gap);
                            align-items: center;
                            height: var(--macro-entry-height);
                            padding: var(--dialog-gap);
                            background-color: var(--color-green);
                            border: 1px solid var(--color-grey);
                            border-radius: calc(var(--key-control-border-radius) / 2);
                            box-sizing: border-box;

                            .macro-entry-handle {
                                cursor: grab;
                            }

                            .macro-entry-content {
                                text-wrap: nowrap;
                            }

                            .macro-entry-controls {
                                margin: 0 0 0 auto;

                                i {
                                    cursor: pointer;
                                }
                            }
                        }
                    }
                }

                &.blank .input-label,
                &.blank .input-color,
                &.blank .input-content,
                &.blank .input-encoder,
                &.group .input-content,
                &.macro .input-encoder {
                    display: none;
                }
            }

            .dialog-reboot-buttons {
                margin-right: var(--dialog-gap);
                margin-bottom: var(--dialog-gap);
            }
        }

        .dialog-button {
            border: 1px solid var(--color-grey);
            border-right: none;

            &.close {
                grid-row: 1;
                grid-column: 2;
                border: none;
                border-bottom: 1px solid var(--color-grey);
                border-left: 1px solid var(--color-grey);
            }

            &.ok {
                grid-row: 3;
                grid-column: 2;
                margin-top: 4px;
                border: none;
                border-top: 1px solid var(--color-grey);
                border-left: 1px solid var(--color-grey);
            }
        }
    }
}

// Notification
.notification-container {
    display: flex;
    flex-direction: column-reverse;
    position: absolute;
    right: 0;
    bottom: 0;

    .notification {
        display: grid;
        grid-auto-columns: auto var(--dialog-button-size);
        align-items: center;
        position: relative;
        min-height: var(--dialog-button-size);
        background-color: var(--color-black);
        border: 1px solid var(--color-grey);
        border-radius: 4px;
        box-sizing: border-box;
        overflow: hidden;

        &.info {
            background-color: var(--color-blue);
        }
        &.success {
            background-color: var(--color-green);
        }
        &.warning {
            background-color: var(--color-yellow);
        }
        &.error {
            background-color: var(--color-red);
        }

        .notification-message {
            padding: 0 calc(var(--dialog-button-size) / 4);
        }

        .dialog-button.close {
            border-left: 1px solid var(--color-grey);
        }
    }
}

// Dialog and notification buttons
.dialog-container .dialog-button,
.notification-container .dialog-button {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
    position: relative;
    width: var(--dialog-button-size);
    height: var(--dialog-button-size);
    background-color: var(--color-white);
    box-sizing: border-box;
    overflow: hidden;
    cursor: pointer;

    &.close {
        grid-row: 1;
        grid-column: 2;
        background-color: var(--color-red);
    }

    &.ok {
        grid-row: 3;
        grid-column: 2;
        background-color: var(--color-blue);
        margin-top: 4px;
    }
}

// Button hover effect
.main-container .app-controls .button:hover,
.main-container .device-controls .button:hover,
.main-container .key-entries-controls .button:hover {
    box-shadow: var(--shadow-outset);
}
.main-container .app-controls .button:active,
.main-container .device-controls .button:active,
.main-container .key-entries-controls .button:active {
    box-shadow: var(--shadow-outset-active);
    transform: translate(1px, 1px);
}
.dialog-container .dialog-button:hover,
.dialog-container .dialog-reboot-buttons .button:hover,
.notification-container .dialog-button:hover {
    box-shadow: var(--shadow-inset);
}
.dialog-container .dialog-button:active,
.dialog-container .dialog-reboot-buttons .button:active,
.notification-container .dialog-button:active {
    box-shadow: var(--shadow-inset-active);
}
